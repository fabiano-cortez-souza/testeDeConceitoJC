<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <groupId>br.com.ericsson.flex</groupId>
	<artifactId>flex-transaction-history</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>flex-transaction-history</name>
    
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.1.RELEASE</version>
        <relativePath />
    </parent>
    
	<properties>
		<preAssembleDir>${project.build.directory}/appassembler-preassemble</preAssembleDir>
		<org.springframework.cloud.version>1.2.3.RELEASE</org.springframework.cloud.version>
		<java.version>1.8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.a>${java.version}</maven.compiler.a>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<spring-boot.repackage.skip>false</spring-boot.repackage.skip>
		<docker.image.prefix>flex-transaction-history</docker.image.prefix>
        <springfox-version>2.9.2</springfox-version>
        <easymock.version>4.0.2</easymock.version>
        <powermock.version>2.0.7</powermock.version>
        <slf4j.version>1.7.25</slf4j.version>
        <maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
        <generated-sources-path>${project.build.directory}/generated-sources</generated-sources-path>
        <generated-sources-java-path>main/java</generated-sources-java-path>
    
		<sonar.scm.provider>git</sonar.scm.provider>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
		<sonar.language>java</sonar.language>
		<sonar.skip>false</sonar.skip>
        
		<sonar.exclusions>
		    **/*pom*.xml,
            /src/main/java/br/com/ericsson/flex/transactionhistory/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/constants/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/dto/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/enums/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/model/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/repository/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/response/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/service/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/vo/*
		</sonar.exclusions>
		<sonar.coverage.exclusions>
		    **/*pom*.xml,
            /src/main/java/br/com/ericsson/flex/transactionhistory/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/constants/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/dto/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/enums/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/model/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/repository/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/response/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/service/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/vo/*
		</sonar.coverage.exclusions>
		<sonar.cpd.exclusions>
		    **/*pom*.xml,
			/src/main/java/br/com/ericsson/flex/transactionhistory/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/constants/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/dto/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/enums/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/model/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/repository/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/response/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/service/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/utils/*,
            /src/main/java/br/com/ericsson/flex/transactionhistory/vo/*
		</sonar.cpd.exclusions>
	</properties>

	<dependencies>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>27.1-jre</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>        
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.20.0-GA</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20160212</version>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>${easymock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
        </dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>1.5.13</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.9.2</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.9.2</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-core</artifactId>
			</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-dynatrace</artifactId>
		</dependency>
		<dependency>
			<groupId>com.dynatrace.oneagent.sdk.java</groupId>
			<artifactId>oneagent-sdk</artifactId>
			<version>1.7.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.10.6</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-actuator-autoconfigure</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-integration</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-gcp-starter</artifactId>
			<version>${org.springframework.cloud.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-gcp-core</artifactId>
			<version>${org.springframework.cloud.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-gcp-autoconfigure</artifactId>
		    <version>${org.springframework.cloud.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-gcp-data-datastore</artifactId>
		    <version>${org.springframework.cloud.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-gcp-starter-data-datastore</artifactId>
		    <version>${org.springframework.cloud.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-gcp-pubsub</artifactId>
		    <version>${org.springframework.cloud.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-gcp-starter-pubsub</artifactId>
			<version>${org.springframework.cloud.version}</version>
		</dependency>
	</dependencies>

	<!-- mvn swagger-codegen:generate -->
	<build>
		<pluginManagement>
			<plugins>
                <plugin>
                	<groupId>org.apache.maven.plugins</groupId>
                	<artifactId>maven-compiler-plugin</artifactId>
                  	<version>3.8.1</version>
                </plugin>
        		<plugin>
        			<groupId>org.sonarsource.scanner.maven</groupId>
        			<artifactId>sonar-maven-plugin</artifactId>
          		    <version>3.7.0.1746</version>
	  	        </plugin>
                <plugin>
                  <groupId>org.jacoco</groupId>
                  <artifactId>jacoco-maven-plugin</artifactId>
                  <version>0.8.5</version>
                  <executions>
                    <execution>
                      <id>pre-test</id>
                      <goals>
                        <goal>prepare-agent</goal>
                      </goals>
                      <configuration>
                        <propertyName>jacocoArgLine</propertyName>
                        <destFile>${project.build.directory}/site/jacoco/jacoco.exec</destFile>
                      </configuration>
                    </execution>
                    <execution>
                      <id>post-test</id>
                      <phase>test</phase>
                      <goals>
                        <goal>report</goal>
                      </goals>
                      <configuration>
                        <outputDirectory>${project.build.directory}/site/jacoco</outputDirectory>
                        <dataFile>${project.build.directory}/site/jacoco/jacoco.exec</dataFile>
                        <overwrite>true</overwrite>
                      </configuration>
                    </execution>
                  </executions>
                </plugin>

				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
					<executions>
						<execution>
							<id>copy-dockerfile</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>target</outputDirectory>
								<overwrite>true</overwrite>
								<resources>
									<resource>
										<directory>./src/main/resources/</directory>
										<filtering>true</filtering>
										<includes>
											<include>Dockerfile</include>
										</includes>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<id>copy-credential</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${preAssembleDir}/credential</outputDirectory>
								<overwrite>true</overwrite>
								<resources>
									<resource>
										<directory>./src/main/resources/</directory>
										<filtering>true</filtering>
										<includes>
											<include>*.json</include>
										</includes>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>io.swagger</groupId>
					<artifactId>swagger-codegen-maven-plugin</artifactId>
					<version>2.2.3</version>
					<executions>
						<execution>
							<goals>
								<goal>generate</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<inputSpec>./api-contract/swaggerTransactionHistory.yaml</inputSpec>
						<output>${project.basedir}</output>
						<language>spring</language>

						<apiPackage>${project.groupId}.${project.artifactId}.swagger.api</apiPackage>
						<modelPackage>${project.groupId}.${project.artifactId}.swagger.model</modelPackage>

						<generateModels>true</generateModels>
						<generateApis>true</generateApis>
						<generateApiTests>true</generateApiTests>
						<generateApiDocumentation>true</generateApiDocumentation>
						<generateSupportingFiles>false</generateSupportingFiles>
						<generateModelDocumentation>true</generateModelDocumentation>

						<configOptions>
							<sourceFolder>src/main/java</sourceFolder>
							<java8>true</java8>
							<interfaceOnly>true</interfaceOnly>
						</configOptions>
					</configuration>
				</plugin>
				
                <plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>2.3.0.RELEASE</version>
					<inherited>false</inherited>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				
                <plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<inherited>false</inherited>
					<configuration>
					    <contextDirectory>target</contextDirectory>
						<dockerFile>Dockerfile</dockerFile>
						<repository>${docker.image.prefix}</repository>
						<buildArgs>
							<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
							<GCP_CREDENTIAL_FILE>appassembler-preassemble/credential/claro-flex-credential.json</GCP_CREDENTIAL_FILE>
						</buildArgs>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>build</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				
                <plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>3.0.0-M3</version>
				</plugin>
				
                <plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.8.2</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.velocity</groupId>
							<artifactId>velocity</artifactId>
							<version>1.5</version>
						</dependency>
					</dependencies>
				</plugin>
                
			</plugins>
		</pluginManagement>
	</build>
	
	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>	
	
	<reporting>
		<plugins>

            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <version>3.0.0-M4</version>
              <configuration>
                <argLine>${jacocoArgLine}</argLine>
                <reportsDirectory>${project.build.directory}/surefire</reportsDirectory>
              </configuration>
            </plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>3.0.0-M4</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.0.0</version>
				<reportSets>
					<reportSet>
						<configuration>
							<skip>true</skip>
						</configuration>
					</reportSet>
				</reportSets>
			</plugin>

		</plugins>
	</reporting>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Greenwich.SR6</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

    <profiles>
      <profile>
        <id>coverage</id>
        <activation>
          <activeByDefault>true</activeByDefault>
        </activation>
        <build>
          <plugins>
            <plugin>
              <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>prepare-agent</id>
                  <goals>
                    <goal>prepare-agent</goal>
                  </goals>
                </execution>
                <execution>
                  <id>report</id>
                  <goals>
                    <goal>report</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </build>
      </profile>
    </profiles>
</project>	

